<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[微信小程序学习第二天]]></title>
    <url>%2F2019%2F09%2F07%2Fwxml2%2F</url>
    <content type="text"><![CDATA[scroll-view添加 scroll-x就可看到滑动理解displaydisplay: flex; display: inline-block;问题：white-space: nowrap; justify-content: center; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>微信小程序</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[微信小程序学习第一天]]></title>
    <url>%2F2019%2F09%2F06%2Fwxml1%2F</url>
    <content type="text"><![CDATA[目录结构pages index index.js Pages({}) index.json 可以设置顶部文字和颜色 index.wxml 相当于html index.wxss 相当于css app.js app.json 导入页面的文件 app.wxss 设置全局样式设置顶部"navigationBarTitleText": "String" 顶部文字 "navigationBarBackgroundColor": "color", 顶部颜色 "navigationBarTextStyle": "black" 仅支持白色和黑色 "enablePullDownRefresh": false, //是否开启下拉刷新幻灯片在swiper标签加swiper-item，swiper-item就是每一页的内容 幻灯片小圆点:indicator-dots="true" document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>微信小程序</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[windows安装虚拟机]]></title>
    <url>%2F2019%2F09%2F01%2F%E8%99%9A%E6%8B%9F%E6%9C%BA%2F</url>
    <content type="text"><![CDATA[下载VMware Workstation，CentOS在VMware Workstation中安装CentOS镜像配置跟着里面安装就行 在CentOS中还可以安装图形化界面 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
  </entry>
  <entry>
    <title><![CDATA[行列式]]></title>
    <url>%2F2019%2F09%2F01%2F%E8%A1%8C%E5%88%97%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[排列n个数就是n阶排列顺序前面的数比后面的小逆序前面的数比后面的大逆序数两种判断方法： 1.一个排列中前面的数比他大的有几个，总和 2.一个排列中前面的数比他小的有几个，总和 总和为奇数就是奇排列，为偶数就是偶排列 行列式的计算：其实可以观察矩阵用连线来记住，多少阶就一次连多少个数字，都具有一定的规律，\这样连线数据是想加，/再减去这样连线的数据就得到结果。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>线性代数</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[豆瓣插件]]></title>
    <url>%2F2019%2F09%2F01%2F%E8%B1%86%E7%93%A3%20%E6%8F%92%E4%BB%B6%E7%88%AC%E5%8F%96%E5%A4%B1%E8%B4%A5%2F</url>
    <content type="text"><![CDATA[使用user 在登录豆瓣个人中心网址上面的那串数字 title 突入你想填的就行 quote 用来浏览器F12取消一小段爬取那部分的html豆瓣插件爬取失败使用： hexo douban -updata hexo g hexo s就可以看到爬取效果 注意 上传的时候不能用hexo d 只能用hexo deploy document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[人物模型]]></title>
    <url>%2F2019%2F08%2F24%2Flive2d%E4%BA%BA%E7%89%A9%E6%A8%A1%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[1.站点配置文件下Git运行:npm install –save hexo-helper-live2d2.站点配置文件写下（主题配置文件下不生效）： 123456789101112# 添加萌妹子效果live2d: enable: true scriptFrom: local model: use: live2d-widget-model-wanko //模型名字 display: position: right //位置 width: 150 //妹子宽度 height: 300 //妹子高度 mobile: show: true 更多模型：https://github.com/xiazeyu/live2d-widget-models更换模型 npm install 模型名称 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[java文件输入输出流]]></title>
    <url>%2F2019%2F08%2F23%2F%E6%96%87%E4%BB%B6%E7%9A%84%E8%AF%BB%E5%86%99%2F</url>
    <content type="text"><![CDATA[字节流 输入：InputStreamread()方法：-1表示无 输出: OutputStreamwrite()方法 字符流 输入: Reader 输出: Writer 节点流 输入FileInputStream 输出:FileOutputStream 缓冲流 输入：BufferdReader 输出：BufferdWriter 对象流 序列化：ObjectInputStream 反序列化：ObjectOutputStream 要求对象实现Serializable接口 常用 注意文件的操作要进行错误处理 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[实用推荐]]></title>
    <url>%2F2019%2F08%2F23%2F%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90%2F</url>
    <content type="text"><![CDATA[图片素材 1.在线平面设计 https://www.fotor.com.cn 2.https://pixabay.com/zh/ 3.https://www.pexels.com/zh-cn/小图标 https://fontawesome.com/v4.7.0/icons/截图推荐 snipaste:能将图片贴在屏幕，很好地观察，快捷键：快速截屏F1,快速贴图F3,退出贴图shift+Esc。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
  </entry>
  <entry>
    <title><![CDATA[Windows安装MySQL]]></title>
    <url>%2F2019%2F08%2F23%2FWindows%20%E4%B8%8A%E5%AE%89%E8%A3%85%20MySQL%2F</url>
    <content type="text"><![CDATA[1.下载最新版本2.3.4.安装MySQL 更改地址 然后一点击下一步就可以5.运行MySQL document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>数据库</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[七牛云截屏上传返回图片地址]]></title>
    <url>%2F2019%2F08%2F22%2F%E4%B8%83%E7%89%9B%E4%BA%91%E6%88%AA%E5%B1%8F%E4%B8%8A%E4%BC%A0%2F</url>
    <content type="text"><![CDATA[1.到github下载release版本 2.打开release中的 settings.ini 文件 3.去七牛云找到密匙填写 4.BUCKET_NAME：储存空间的名称 5BUCKET_DOMAIN：你自己的域名 6.UP_HOST = http://up-z2.qiniup.com 7.DEBUG_MODE：调试开关，截屏上传失败可以把false改为true document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>markdown</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[鼠标点击特效]]></title>
    <url>%2F2019%2F08%2F21%2F%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E7%88%86%E7%82%B8%E6%95%88%E6%9E%9C%2F</url>
    <content type="text"><![CDATA[1.主题配置文件找 layout 文件夹中的 _layout.swig在body中加入 12345{% if theme.fireworks %} &lt;canvas class="fireworks" style="position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;" &gt;&lt;/canvas&gt; &lt;script type="text/javascript" src="//cdn.bootcss.com/animejs/2.2.0/anime.min.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="/js/src/fireworks.js"&gt;&lt;/script&gt; {% endif %} 2.主题配置文件找source 文件夹中的 js新建src文件夹，在src新建fireworks.js 1"use strict";function updateCoords(e){pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top}function setParticuleDirection(e){var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return{x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)}}function createParticule(e,t){var a={};return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function(){ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()},a}function createCircle(e,t){var a={};return a.x=e,a.y=t,a.color="#F00",a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function(){ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1},a}function renderParticule(e){for(var t=0;t&lt;e.animatables.length;t++){e.animatables[t].target.draw()}}function animateParticules(e,t){for(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++){n.push(createParticule(e,t))}anime.timeline().add({targets:n,x:function(e){return e.endPos.x},y:function(e){return e.endPos.y},radius:0.1,duration:anime.random(1200,1800),easing:"easeOutExpo",update:renderParticule}).add({targets:a,radius:anime.random(80,160),lineWidth:0,alpha:{value:0,easing:"linear",duration:anime.random(600,800)},duration:anime.random(1200,1800),easing:"easeOutExpo",update:renderParticule,offset:0})}function debounce(e,t){var a;return function(){var n=this,i=arguments;clearTimeout(a),a=setTimeout(function(){e.apply(n,i)},t)}}var canvasEl=document.querySelector(".fireworks");if(canvasEl){var ctx=canvasEl.getContext("2d"),numberOfParticules=30,pointerX=0,pointerY=0,tap="mousedown",colors=["#FF1461","#18FF92","#5A87FF","#FBF38C"],setCanvasSize=debounce(function(){canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+"px",canvasEl.style.height=window.innerHeight+"px",canvasEl.getContext("2d").scale(2,2)},500),render=anime({duration:1/0,update:function(){ctx.clearRect(0,0,canvasEl.width,canvasEl.height)}});document.addEventListener(tap,function(e){"sidebar"!==e.target.id&amp;&amp;"toggle-sidebar"!==e.target.id&amp;&amp;"A"!==e.target.nodeName&amp;&amp;"IMG"!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))},!1),setCanvasSize(),window.addEventListener("resize",setCanvasSize,!1)}"use strict";function updateCoords(e){pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top}function setParticuleDirection(e){var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return{x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)}}function createParticule(e,t){var a={};return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function(){ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()},a}function createCircle(e,t){var a={};return a.x=e,a.y=t,a.color="#F00",a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function(){ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1},a}function renderParticule(e){for(var t=0;t&lt;e.animatables.length;t++){e.animatables[t].target.draw()}}function animateParticules(e,t){for(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++){n.push(createParticule(e,t))}anime.timeline().add({targets:n,x:function(e){return e.endPos.x},y:function(e){return e.endPos.y},radius:0.1,duration:anime.random(1200,1800),easing:"easeOutExpo",update:renderParticule}).add({targets:a,radius:anime.random(80,160),lineWidth:0,alpha:{value:0,easing:"linear",duration:anime.random(600,800)},duration:anime.random(1200,1800),easing:"easeOutExpo",update:renderParticule,offset:0})}function debounce(e,t){var a;return function(){var n=this,i=arguments;clearTimeout(a),a=setTimeout(function(){e.apply(n,i)},t)}}var canvasEl=document.querySelector(".fireworks");if(canvasEl){var ctx=canvasEl.getContext("2d"),numberOfParticules=30,pointerX=0,pointerY=0,tap="mousedown",colors=["#FF1461","#18FF92","#5A87FF","#FBF38C"],setCanvasSize=debounce(function(){canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+"px",canvasEl.style.height=window.innerHeight+"px",canvasEl.getContext("2d").scale(2,2)},500),render=anime({duration:1/0,update:function(){ctx.clearRect(0,0,canvasEl.width,canvasEl.height)}});document.addEventListener(tap,function(e){"sidebar"!==e.target.id&amp;&amp;"toggle-sidebar"!==e.target.id&amp;&amp;"A"!==e.target.nodeName&amp;&amp;"IMG"!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))},!1),setCanvasSize(),window.addEventListener("resize",setCanvasSize,!1)}; 3.主题配置文件末尾加入： # Fireworks fireworks: true document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[JAVA面向对象（2)]]></title>
    <url>%2F2019%2F08%2F21%2Fjava2%2F</url>
    <content type="text"><![CDATA[类 类的组成：变量，方法，构造方法 构造方法：与类同名，不返回数字类型 方法 实例方法 静态方法 方法重载：该方法有多个名字但参数的个数和类型不同，可以用来实现多态 变量： 实例变量 静态变量 类的对象：可以访问类中的方法 继承： 声明 子类 extends 父类 继承父类的变量和方法 可以修改父类的变量和方法，还可以添加自己的变量和方法，名字相同就会进行覆盖和修改 关键字：this表示该类的对象 super：必须放在第一句用于访问父类的变量和方法（一般用于同名），可用来调用父类的构造方法 父类对象和子类对象的转换（好像是上转型对象） 包： import用于导入其他类，放在文件的首位 同包类可以相互访问,反之不得 控制符 static final abstract 接口： 定义接口：interface 实现接口：implements 调用接口则接口中的所有方法必须重写 可以实现多继承 接口定义的常量具有final，static，public属性 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[JAVA面向对象（1)]]></title>
    <url>%2F2019%2F08%2F21%2Fjava1%2F</url>
    <content type="text"><![CDATA[基本数据类型 整数型 进制的表示 浮点数型 注意单精度的书写要加f 逻辑型—boolean 字符型—char 数据类型的转换 标识符 可以由数字，字母，下划线_,美元符号$组成 不能以数字开头 通常类名开头要大写（java大小写敏感） 其余的小写字母开头 数组 数组的创建 数组的声明 int []a;(不能声明数组的长度) 为数组分配内存空间 a=new[5] 数组的定义 数组的引用类型int []a=new int[5]这里的a就是引用 数组默认初始化为0或者null 数组的遍历： 简单的循环语句 也可以用for(int age;age){}只读遍历 数组长度：数组名.length 可以获取 数组的复制：Array.Copy document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[视频嵌入]]></title>
    <url>%2F2019%2F08%2F20%2F%E8%A7%86%E9%A2%91%2F</url>
    <content type="text"><![CDATA[document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>外接嵌入</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[pr]]></title>
    <url>%2F2019%2F08%2F20%2FPr%2F</url>
    <content type="text"><![CDATA[教程推荐 :https://www.bilibili.com/video/av5540953/?p=9 画面放大缩小： 双击预览视频区 弹幕制作： 使用默认静态字幕弹幕效果：使用关键帧 -- 运动 设置关键帧的开始和结束位置（&lt;span style="color: red"&gt;记得打点&lt;/span&gt;） 视频速度：右键更改速度比例(鬼畜) 视频的衔接：左侧工具栏找到 - 视频过度 视频结尾：使用关键帧 – 运动 设置关键帧的开始和结束位置（记得打点） 导出：h.264 视频转场： 1.全选素材 2.Ctrl+d 3.转场素材可去设置默认 批量缩放素材： 找到首选项中的默认媒体缩放设置为 帧大小 批量调色： 1.效果控件将颜色复制在删掉 2.找到只要进行粘贴 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>剪辑软件</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[音乐载入]]></title>
    <url>%2F2019%2F08%2F19%2F%E9%9F%B3%E4%B9%90%2F</url>
    <content type="text"><![CDATA[document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>外接嵌入</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[博客搭建]]></title>
    <url>%2F2019%2F08%2F19%2Fhexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[1.下载node.js 下载地址 2.下载Git 下载地址 3.安装Hexo 官方Api 在新的文件夹右键 Git Bash Here 在Git中输入 npm install -g hexo-cli hexo init npm install 4.更换主题(本人使用NexT主题,NexT) 主题下载 更换主题：到根目录 _config.yml 找到 theme 5.更改语言 到根目录 _config.yml 将 language: 改为 zh-CN 6.增加标签和分类页 在主题配置文件找到 Menu Settings 将要打开的功能去掉# 7.更换头像 在主题配置文件找到 avatar 将url更改 8.更改标题和作者 站点配置文件Ctrl+F 搜索title，author将其更改 9.启用社交链接 在主题配置文件找到 social 将需要的功能打开，也可以自行添加 10.打开打赏功能 在主题配置文件找到 reward_settings 将false 改为true 找到 reward 更改图片地址 11.打开订阅公众号 在主题配置文件找到 wechat_subscriber 将false 改为true 12.添加动态背景 在主题配置文件找到 canvas_nest 将 enable: false更改为 true 可能需要下载库链接 13.设置阅读全文 1.打开source 在文章中加入&lt; !–more–&gt;(无空格) 2.在主题配置文件找到 auto_excerpt 将false 改为true ，length自行调节 14.添加评论,搜索，统计，分享，字数统计，阅读市场功能(可参照NexT使用文档) NexT使用文档 15.部署到Github(可参照NexT使用文档) document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[页面框架]]></title>
    <url>%2F2019%2F08%2F18%2F%E6%A1%86%E6%9E%B6%2F</url>
    <content type="text"><![CDATA[链接 百度 图片 &lt;!DOCTYPE html&gt; &lt;html lang="en"&gt; &lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt; &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt; &lt;link rel="stylesheet" href="index.css"&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;div id="top"&gt; &lt;div class="container"&gt; &lt;/div&gt; &lt;/div&gt; &lt;div id="vlog"&gt; &lt;div class="container"&gt; &lt;div class="vlog-left"&gt; &lt;/div&gt; &lt;div class="vlog-right"&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; *{ padding: 0; margin: 0; } #top{ width: 100%; height: 100px; border: 1px solid red; } .container{ width: 70%; height: 100%;; margin: 0px auto; border: 1px solid red; } #vlog{ width: 100%; height: 400px; border: 1px solid red; } .container .vlog-left{ width: 18%; height: 100%; border: 1px solid red; float: left; } .container .vlog-right{ width: 80%; height: 100%; float: right; border: 1px solid red; } document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>页面框架</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hello]]></title>
    <url>%2F2019%2F08%2F18%2Fhello%2F</url>
    <content type="text"><![CDATA[(一)C语言的结构 １。程序的构成，main函数和其他函数。２。头文件、数据说明、函数的开始和结束标志。３。源程序的书写格式。４。C语言的风格。(二)数据类型及其运算１。C的数据类型（基本类型、构造类型、指针类型、空类型）及其定义方法。２。C运算符的种类、运算优先级和结合性。３。不同类型数据间的转换与运算。４。C表达式类型（赋值表达、算术表达式、关系表达式、逻辑表达式、条件表达式、逗号表达式）和求值规则。(三)基本语句１。表达式语句，空语句，复合语句。２。数据的输入与输出，输入输出函数的调用。３。复合语句。４。goto语句和语句标号的使用。(四)选择结构程序设计１。用if语句实现选择结构。２。用switch语句实现多分支选择结构。３。选择结构的嵌套(五)循环结构程序设计１。for循环结构。２。while和dowhile循环结构。３。continue语句和break语句。４。循环的嵌套。(六)数组定义和引用１。一维数组和多维数组的定义、初始化和引用。２。字符串与字符数组。(七)函数１。库函数的正确调用。２。函数的定义方法。３。函数的类型和返回值。４。形式参数与实在参数，参数值的传递。５。函数的正确调用，嵌套调用，递归调用。６。局部变量和全局变量。７。变量的存储类别（自动、静态、寄存器、外部），变量的作用域和生存期。８。内部函数与外部函数。(八)编译预处理１。宏定义：不带参数的宏定义；带参数的宏定义。２。“文件包含”处理(九)指针１。指针与指针变量的概念，指针与地址运算符。２。变量、数组、字符串、函数、结构体的指针以及指向变量、数组、字符串、函数、结构体的指针变量。通过指针引用以上各类型数据。３。用指针作函数参数。４。返回指针值的指针函数。５。指针数组，指向指针的指针，main函数的命令行参数。(十)结构体（即“结构”）与共用体（即“联合”）１。结构体和共用体类型数据的定义方法和引用方法。２。用指针和结构体构成链表，单向链表的建立、输出、删除与插入。(十一)位运算１。位运算符的含义及使用。２。简单的位运算。(十二)文件操作只要求缓冲文件系统（即高级磁盘I/O系统），对非标准缓冲文–件系统（即低级磁盘I/O系统）不要求。１。文件类型指针（FILE类型指针）。２。文件的打开与关闭（fopen,fclose）。３。文件的读写（fputc，fgetc，fputs，fread，fwrite，fprintf，fscanf函数），文件的定位（rewind,fseek函数）。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>C语言</category>
      </categories>
  </entry>
</search>
